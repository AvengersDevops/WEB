@using AvengersWeb.Models
@using AvengersWeb.Repositories
@using Task = System.Threading.Tasks.Task
<h1>Add Task</h1>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="taskTitle">Title</label>
            <input type="text" class="form-control" id="taskTitle" placeholder="Title" @bind="_taskTitle">
        </div>
        <div class="form-group">
            <label for="taskDescription">Description</label>
            <input type="text" class="form-control" id="taskDescription" placeholder="Description" @bind="_taskDescription">
        </div>
        <div class="form-group">
            <label for="taskDueDate">Due Date</label>
            <input type="datetime-local" class="form-control" id="taskDueDate" @bind="_dueDate">
        </div>
        <button type="submit" class="btn btn-primary" @onclick="AddTask">Add Task</button>
    </div>
</div>

@code {
    string? _taskTitle;
    string? _taskDescription;
    DateTime? _dueDate;

    async Task AddTask()
    {
        var task = new Models.Task
        {
            UserId = UserHandler.User.Id,
            Title = _taskTitle,
            Description = _taskDescription,
            DueDate = _dueDate ?? DateTime.MinValue,
            Done = false
        };

        TaskRepository taskRepository = new();
        await taskRepository.Create(task);

        UserHandler.Tasks = await taskRepository.ReadAll((int)UserHandler.User.Id!);
    }

}